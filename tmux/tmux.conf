BG1="#005f87"
BG2="#e8e9e4"
BG3="#0087af"
FG1="#444444"

set-option -g status "on"

# default statusbar colors
set-option -g status-bg $BG2 #bg1
set-option -g status-fg $FG1 #fg1

set-option -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',screen:RGB'
# pane number display
# set-option -g display-panes-active-colour colour250 #fg2
# set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour24 #blue

set-window-option -g window-status-bell-style fg=colour229,bg=colour88 #bg, red

set-option -g status-justify "left"
set-option -g status-left-length "80"
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=$BG2, bg=$BG1] (｀･ω･´) #[fg=$BG2, bg=$BG1, nobold, noitalics, nounderscore]"
set-option -g status-right "#[fg=$BG3, bg=$BG1, nobold, nounderscore, noitalics]#[fg=$BG2,bg=$BG3] %Y-%m-%d  %H:%M #[fg=$BG2, bg=$BG3, nobold, noitalics, nounderscore]#[fg=$FG1, bg=$BG2] ⁽⁽◝( ˙ ꒳ ˙ )◜⁾⁾"

set-window-option -g window-status-format "#[fg=$FG3, bg=$BG1, :nobold, noitalics, nounderscore]#[fg=$BG1, bg=$BG2] #I#[fg=$BG1, bg=$BG2, bold] #W #[fg=$BG2, bg=$BG1, nobold, noitalics, nounderscore]"
set-window-option -g window-status-current-format "#[fg=$BG3,bg=$BG1,noitalics]#[fg=$BG2,bg=$BG3] #I#[fg=$BG2, bg=$BG3] #W #[fg=$BG3, bg=$BG1, noitalics]"

set -g prefix C-a
unbind C-b
bind C-a send-prefix

set -g base-index 1

unbind '"'
bind - splitw -v -p 20 -c "#{pane_current_path}" # 分割成上下两个窗口
unbind %
bind + splitw -h # 分割成左右两个窗口

# 事实证明。。。选择是常用操作，改大小都是很低频的，两个快捷键像了很容易出事
bind ^k selectp -U # 选择上窗格
bind ^j selectp -D # 选择下窗格
bind ^h selectp -L # 选择左窗格
bind ^l selectp -R # 选择右窗格

# Make clipboard available to vim
setw -g mode-keys vi
